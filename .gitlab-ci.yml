image: maven:latest

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - test-server
  - build-server
  - develop-server

# test stage will compile the code and run all the unit tests present in the
# test folder.
test:
  stage: test-server
  tags:
    - ugrad
  script:
    - cd server
    - mvn clean test
    
# build stage will just build the codebase without running
# any tests or creating any jar file.
build:
  stage: build-server
  tags:
    - ugrad
  script:
    - cd server
    - mvn clean package -DskipTests=true
    - ls
  artifacts:
    paths:
       - target/*.jar


## deploy stage will create package the jar and keep it in the target folder.
## The success of deploy stage will mark the pipeline as passed.
deploy:
  stage: develop-server
  tags:
    - ugrad
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -    
  script:
    - echo ${DEPLOY_USER}
    - echo ${DEPLOY_HOST}
    - scp -r -o StrictHostKeyChecking=no server/target/*.jar "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_SHORT_SHA}.zip"
    - scp -r -o StrictHostKeyChecking=no config.properties "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/config.properties"
  only:
    - develop
