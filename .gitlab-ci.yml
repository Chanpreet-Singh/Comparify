image: maven:latest

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - test
  - build
  - deploy-staging
  - deploy-production

# test stage will compile the code and run all the unit tests present in the
# test folder.
Test:
  stage: test
  tags:
    - ugrad
  script:
    - cd server
    - mvn verify
    - ls target
  artifacts:
    when: always
    reports:
      junit:
        - server/target/surefire-reports/TEST-*.xml
        - server/target/failsafe-reports/TEST-*.xml
    
# build stage will just build the codebase without running
# any tests or creating any jar file.
Build Server:
  stage: build
  tags:
    - ugrad
  script:
    - cd server
    - mvn clean package -DskipTests=true
  artifacts:
    paths:
       - target/*.jar

Build Client:
  stage: build
  image: alpine:lastest
  tags:
    - dalfcs_docker_autoscale
  before_script:
    - apt-get update -qy
    - apt-get install -y maven
    - apt-get install -y node
  script:
    - cd comparify-client/src/main/resources/client
    - npm install
    - npm run build
    - mvn clean install


## deploy stage will create package the jar and keep it in the target folder.
## The success of deploy stage will mark the pipeline as passed.
Deploy Staging Client:
  stage: deploy-staging
  image: ruby:latest
  tags:
    - dalfcs_docker_autoscale  
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - cd comparify-client
    - dpl --provider=heroku --app=$STAGING_HEROKU_APP_NAME --api-key=$HARSH_HEROKU_API_KEY
  only:
    - /^feature-.*/

Deploy Staging Server:
  stage: deploy-staging
  image: ruby:latest
  tags:
    - dalfcs_docker_autoscale  
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - cd server
    - dpl --provider=heroku --app=$STAGING_HEROKU_APP_NAME --api-key=$HARSH_HEROKU_API_KEY
  only:
    - /^feature-.*/

Deploy Production Server:
  stage: deploy-production
  image: ruby:latest
  tags:
    - dalfcs_docker_autoscale  
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - cd server
    - dpl --provider=heroku --app=$PRODUCTION_HEROKU_APP_NAME --api-key=$HARSH_HEROKU_API_KEY
  only:
    - tag

